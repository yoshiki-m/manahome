{"ast":null,"code":"import _defineProperty from \"/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"checked\", \"color\", \"name\", \"onChange\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      color = styleProps.color;\n  var slots = {\n    root: ['root', \"color\".concat(capitalize(color))]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\n\nvar RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return rootShouldForwardProp(prop) || prop === 'classes';\n  },\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var styleProps = props.styleProps;\n    return _extends({}, styles.root, styles[\"color\".concat(capitalize(styleProps.color))]);\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      styleProps = _ref.styleProps;\n  return _extends({\n    /* Styles applied to the root element. */\n    color: theme.palette.text.secondary,\n    '&:hover': {\n      backgroundColor: alpha(styleProps.color === 'default' ? theme.palette.action.active : theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }, styleProps.color !== 'default' && _defineProperty({}, \"&.\".concat(radioClasses.checked), {\n    color: theme.palette[styleProps.color].main\n  }), _defineProperty({}, \"&.\".concat(radioClasses.disabled), {\n    color: theme.palette.action.disabled\n  }));\n});\n\nvar defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\n\nvar defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\n\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n\n  var checkedProp = props.checked,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var styleProps = _extends({}, props, {\n    color: color,\n    size: size\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    styleProps: styleProps,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","map":{"version":3,"sources":["/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/@material-ui/core/Radio/Radio.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","refType","unstable_composeClasses","composeClasses","alpha","SwitchBase","useThemeProps","RadioButtonIcon","capitalize","createChainedFunction","useRadioGroup","radioClasses","getRadioUtilityClass","styled","rootShouldForwardProp","jsx","_jsx","useUtilityClasses","styleProps","classes","color","slots","root","RadioRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","theme","palette","text","secondary","backgroundColor","action","active","main","hoverOpacity","checked","disabled","defaultCheckedIcon","defaultIcon","Radio","forwardRef","inProps","ref","checkedProp","nameProp","onChangeProp","onChange","size","other","radioGroup","value","type","icon","cloneElement","fontSize","checkedIcon","process","env","NODE_ENV","propTypes","bool","node","object","oneOfType","oneOf","string","disableRipple","id","inputProps","inputRef","func","required","sx","any"],"mappings":";AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,IAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,MAArB,EAA6B,UAA7B,EAAyC,MAAzC,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,uBAA1D;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,YAAP,IAAuBC,oBAAvB,QAAmD,gBAAnD;AACA,OAAOC,MAAP,IAAiBC,qBAAjB,QAA8C,kBAA9C;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,UAAU,EAAI;AAAA,MAEpCC,OAFoC,GAIlCD,UAJkC,CAEpCC,OAFoC;AAAA,MAGpCC,KAHoC,GAIlCF,UAJkC,CAGpCE,KAHoC;AAKtC,MAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,iBAAiBd,UAAU,CAACY,KAAD,CAA3B;AADM,GAAd;AAGA,SAAOvB,QAAQ,CAAC,EAAD,EAAKsB,OAAL,EAAchB,cAAc,CAACkB,KAAD,EAAQT,oBAAR,EAA8BO,OAA9B,CAA5B,CAAf;AACD,CATD;;AAWA,IAAMI,SAAS,GAAGV,MAAM,CAACR,UAAD,EAAa;AACnCmB,EAAAA,iBAAiB,EAAE,2BAAAC,IAAI;AAAA,WAAIX,qBAAqB,CAACW,IAAD,CAArB,IAA+BA,IAAI,KAAK,SAA5C;AAAA,GADY;AAEnCC,EAAAA,IAAI,EAAE,UAF6B;AAGnCC,EAAAA,IAAI,EAAE,MAH6B;AAInCC,EAAAA,iBAAiB,EAAE,2BAACC,KAAD,EAAQC,MAAR,EAAmB;AAAA,QAElCZ,UAFkC,GAGhCW,KAHgC,CAElCX,UAFkC;AAIpC,WAAOrB,QAAQ,CAAC,EAAD,EAAKiC,MAAM,CAACR,IAAZ,EAAkBQ,MAAM,gBAAStB,UAAU,CAACU,UAAU,CAACE,KAAZ,CAAnB,EAAxB,CAAf;AACD;AATkC,CAAb,CAAN,CAUf;AAAA,MACDW,KADC,QACDA,KADC;AAAA,MAEDb,UAFC,QAEDA,UAFC;AAAA,SAGGrB,QAAQ,CAAC;AACb;AACAuB,IAAAA,KAAK,EAAEW,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,SAFb;AAGb,eAAW;AACTC,MAAAA,eAAe,EAAE/B,KAAK,CAACc,UAAU,CAACE,KAAX,KAAqB,SAArB,GAAiCW,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqBC,MAAtD,GAA+DN,KAAK,CAACC,OAAN,CAAcd,UAAU,CAACE,KAAzB,EAAgCkB,IAAhG,EAAsGP,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqBG,YAA3H,CADb;AAET;AACA,8BAAwB;AACtBJ,QAAAA,eAAe,EAAE;AADK;AAHf;AAHE,GAAD,EAUXjB,UAAU,CAACE,KAAX,KAAqB,SAArB,oCACKT,YAAY,CAAC6B,OADlB,GAC8B;AAC7BpB,IAAAA,KAAK,EAAEW,KAAK,CAACC,OAAN,CAAcd,UAAU,CAACE,KAAzB,EAAgCkB;AADV,GAD9B,CAVW,kCAeN3B,YAAY,CAAC8B,QAfP,GAeoB;AAC9BrB,IAAAA,KAAK,EAAEW,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqBK;AADE,GAfpB,EAHX;AAAA,CAVe,CAAlB;;AAiCA,IAAMC,kBAAkB,GAAG,aAAa1B,IAAI,CAACT,eAAD,EAAkB;AAC5DiC,EAAAA,OAAO,EAAE;AADmD,CAAlB,CAA5C;;AAIA,IAAMG,WAAW,GAAG,aAAa3B,IAAI,CAACT,eAAD,EAAkB,EAAlB,CAArC;;AAEA,IAAMqC,KAAK,GAAG,aAAa7C,KAAK,CAAC8C,UAAN,CAAiB,SAASD,KAAT,CAAeE,OAAf,EAAwBC,GAAxB,EAA6B;AACvE,MAAMlB,KAAK,GAAGvB,aAAa,CAAC;AAC1BuB,IAAAA,KAAK,EAAEiB,OADmB;AAE1BpB,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AADuE,MAO5DsB,WAP4D,GAYnEnB,KAZmE,CAOrEW,OAPqE;AAAA,qBAYnEX,KAZmE,CAQrET,KARqE;AAAA,MAQrEA,KARqE,6BAQ7D,SAR6D;AAAA,MAS/D6B,QAT+D,GAYnEpB,KAZmE,CASrEH,IATqE;AAAA,MAU3DwB,YAV2D,GAYnErB,KAZmE,CAUrEsB,QAVqE;AAAA,oBAYnEtB,KAZmE,CAWrEuB,IAXqE;AAAA,MAWrEA,IAXqE,4BAW9D,QAX8D;AAAA,MAajEC,KAbiE,GAazDzD,6BAA6B,CAACiC,KAAD,EAAQ/B,SAAR,CAb4B;;AAevE,MAAMoB,UAAU,GAAGrB,QAAQ,CAAC,EAAD,EAAKgC,KAAL,EAAY;AACrCT,IAAAA,KAAK,EAALA,KADqC;AAErCgC,IAAAA,IAAI,EAAJA;AAFqC,GAAZ,CAA3B;;AAKA,MAAMjC,OAAO,GAAGF,iBAAiB,CAACC,UAAD,CAAjC;AACA,MAAMoC,UAAU,GAAG5C,aAAa,EAAhC;AACA,MAAI8B,OAAO,GAAGQ,WAAd;AACA,MAAMG,QAAQ,GAAG1C,qBAAqB,CAACyC,YAAD,EAAeI,UAAU,IAAIA,UAAU,CAACH,QAAxC,CAAtC;AACA,MAAIzB,IAAI,GAAGuB,QAAX;;AAEA,MAAIK,UAAJ,EAAgB;AACd,QAAI,OAAOd,OAAP,KAAmB,WAAvB,EAAoC;AAClCA,MAAAA,OAAO,GAAGc,UAAU,CAACC,KAAX,KAAqB1B,KAAK,CAAC0B,KAArC;AACD;;AAED,QAAI,OAAO7B,IAAP,KAAgB,WAApB,EAAiC;AAC/BA,MAAAA,IAAI,GAAG4B,UAAU,CAAC5B,IAAlB;AACD;AACF;;AAED,SAAO,aAAaV,IAAI,CAACO,SAAD,EAAY1B,QAAQ,CAAC;AAC3C2D,IAAAA,IAAI,EAAE,OADqC;AAE3CC,IAAAA,IAAI,EAAE,aAAa1D,KAAK,CAAC2D,YAAN,CAAmBf,WAAnB,EAAgC;AACjDgB,MAAAA,QAAQ,EAAEP,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B;AADU,KAAhC,CAFwB;AAK3CQ,IAAAA,WAAW,EAAE,aAAa7D,KAAK,CAAC2D,YAAN,CAAmBhB,kBAAnB,EAAuC;AAC/DiB,MAAAA,QAAQ,EAAEP,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B;AADwB,KAAvC,CALiB;AAQ3ClC,IAAAA,UAAU,EAAEA,UAR+B;AAS3CC,IAAAA,OAAO,EAAEA,OATkC;AAU3CO,IAAAA,IAAI,EAAEA,IAVqC;AAW3Cc,IAAAA,OAAO,EAAEA,OAXkC;AAY3CW,IAAAA,QAAQ,EAAEA,QAZiC;AAa3CJ,IAAAA,GAAG,EAAEA;AAbsC,GAAD,EAczCM,KAdyC,CAApB,CAAxB;AAeD,CAnD0B,CAA3B;AAoDAQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnB,KAAK,CAACoB;AAC9C;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACExB,EAAAA,OAAO,EAAExC,SAAS,CAACiE,IATnB;;AAWA;AACF;AACA;AACEL,EAAAA,WAAW,EAAE5D,SAAS,CAACkE,IAdvB;;AAgBA;AACF;AACA;AACE/C,EAAAA,OAAO,EAAEnB,SAAS,CAACmE,MAnBnB;;AAqBA;AACF;AACA;AACA;AACE/C,EAAAA,KAAK,EAAEpB;AACP;AADgB,GAEfoE,SAFM,CAEI,CAACpE,SAAS,CAACqE,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,OAApC,EAA6C,MAA7C,EAAqD,SAArD,EAAgE,SAAhE,CAAhB,CAAD,EAA8FrE,SAAS,CAACsE,MAAxG,CAFJ,CAzBP;;AA6BA;AACF;AACA;AACE7B,EAAAA,QAAQ,EAAEzC,SAAS,CAACiE,IAhCpB;;AAkCA;AACF;AACA;AACEM,EAAAA,aAAa,EAAEvE,SAAS,CAACiE,IArCzB;;AAuCA;AACF;AACA;AACER,EAAAA,IAAI,EAAEzD,SAAS,CAACkE,IA1ChB;;AA4CA;AACF;AACA;AACEM,EAAAA,EAAE,EAAExE,SAAS,CAACsE,MA/Cd;;AAiDA;AACF;AACA;AACEG,EAAAA,UAAU,EAAEzE,SAAS,CAACmE,MApDtB;;AAsDA;AACF;AACA;AACEO,EAAAA,QAAQ,EAAEzE,OAzDV;;AA2DA;AACF;AACA;AACEyB,EAAAA,IAAI,EAAE1B,SAAS,CAACsE,MA9DhB;;AAgEA;AACF;AACA;AACA;AACA;AACA;AACA;AACEnB,EAAAA,QAAQ,EAAEnD,SAAS,CAAC2E,IAvEpB;;AAyEA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAE5E,SAAS,CAACiE,IA5EpB;;AA8EA;AACF;AACA;AACA;AACA;AACEb,EAAAA,IAAI,EAAEpD;AACN;AADe,GAEdoE,SAFK,CAEK,CAACpE,SAAS,CAACqE,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CAAD,EAAuCrE,SAAS,CAACsE,MAAjD,CAFL,CAnFN;;AAuFA;AACF;AACA;AACEO,EAAAA,EAAE,EAAE7E,SAAS,CAACmE,MA1Fd;;AA4FA;AACF;AACA;AACEZ,EAAAA,KAAK,EAAEvD,SAAS,CAAC8E;AA/FjB,CAFF,GAkGI,KAAK,CAlGT;AAmGA,eAAelC,KAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"color\", \"name\", \"onChange\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\n\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[`color${capitalize(styleProps.color)}`]);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  color: theme.palette.text.secondary,\n  '&:hover': {\n    backgroundColor: alpha(styleProps.color === 'default' ? theme.palette.action.active : theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, styleProps.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: theme.palette[styleProps.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\n\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\n\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n\n  const {\n    checked: checkedProp,\n    color = 'primary',\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'medium'\n    }),\n    styleProps: styleProps,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;"]},"metadata":{},"sourceType":"module"}