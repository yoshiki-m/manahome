{"ast":null,"code":"import _classCallCheck from \"/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { unstable_ownerWindow as ownerWindow, unstable_ownerDocument as ownerDocument, unstable_getScrollbarSize as getScrollbarSize } from '@material-ui/utils'; // Is a vertical scrollbar displayed?\n\nfunction isOverflowing(container) {\n  var doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(element, show) {\n  if (show) {\n    element.setAttribute('aria-hidden', 'true');\n  } else {\n    element.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(element) {\n  return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight, 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountElement, currentElement) {\n  var elementsToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var show = arguments.length > 4 ? arguments[4] : undefined;\n  var blacklist = [mountElement, currentElement].concat(_toConsumableArray(elementsToExclude));\n  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, function (element) {\n    if (blacklist.indexOf(element) === -1 && blacklistTagNames.indexOf(element.tagName) === -1) {\n      ariaHidden(element, show);\n    }\n  });\n}\n\nfunction findIndexOf(items, callback) {\n  var idx = -1;\n  items.some(function (item, index) {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  var restoreStyle = [];\n  var container = containerInfo.container;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      var scrollbarSize = getScrollbarSize(ownerDocument(container));\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        property: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style.paddingRight = \"\".concat(getPaddingRight(container) + scrollbarSize, \"px\"); // .mui-fixed is a global helper.\n\n      var fixedElements = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedElements, function (element) {\n        restoreStyle.push({\n          value: element.style.paddingRight,\n          property: 'padding-right',\n          el: element\n        });\n        element.style.paddingRight = \"\".concat(getPaddingRight(element) + scrollbarSize, \"px\");\n      });\n    } // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n\n    var parent = container.parentElement;\n    var containerWindow = ownerWindow(container);\n    var scrollContainer = (parent == null ? void 0 : parent.nodeName) === 'HTML' && containerWindow.getComputedStyle(parent).overflowY === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      property: 'overflow',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  var restore = function restore() {\n    restoreStyle.forEach(function (_ref) {\n      var value = _ref.value,\n          el = _ref.el,\n          property = _ref.property;\n\n      if (value) {\n        el.style.setProperty(property, value);\n      } else {\n        el.style.removeProperty(property);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  var hiddenSiblings = [];\n  [].forEach.call(container.children, function (element) {\n    if (element.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(element);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager);\n\n    this.containers = void 0;\n    this.modals = void 0;\n    this.modals = [];\n    this.containers = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal, container) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex !== -1) {\n        return modalIndex;\n      }\n\n      modalIndex = this.modals.length;\n      this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n      if (modal.modalRef) {\n        ariaHidden(modal.modalRef, false);\n      }\n\n      var hiddenSiblings = getHiddenSiblings(container);\n      ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.container === container;\n      });\n\n      if (containerIndex !== -1) {\n        this.containers[containerIndex].modals.push(modal);\n        return modalIndex;\n      }\n\n      this.containers.push({\n        modals: [modal],\n        container: container,\n        restore: null,\n        hiddenSiblings: hiddenSiblings\n      });\n      return modalIndex;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(modal, props) {\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n\n      if (!containerInfo.restore) {\n        containerInfo.restore = handleContainer(containerInfo, props);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex === -1) {\n        return modalIndex;\n      }\n\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n      this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n      if (containerInfo.modals.length === 0) {\n        // The modal might be closed before it had the chance to be mounted in the DOM.\n        if (containerInfo.restore) {\n          containerInfo.restore();\n        }\n\n        if (modal.modalRef) {\n          // In case the modal wasn't in the DOM yet.\n          ariaHidden(modal.modalRef, true);\n        }\n\n        ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);\n        this.containers.splice(containerIndex, 1);\n      } else {\n        // Otherwise make sure the next top modal is visible to a screen reader.\n        var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n        // aria-hidden because the dom element doesn't exist either\n        // when modal was unmounted before modalRef gets null\n\n        if (nextTop.modalRef) {\n          ariaHidden(nextTop.modalRef, false);\n        }\n      }\n\n      return modalIndex;\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexport { ModalManager as default };","map":{"version":3,"sources":["/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/@material-ui/unstyled/ModalUnstyled/ModalManager.js"],"names":["unstable_ownerWindow","ownerWindow","unstable_ownerDocument","ownerDocument","unstable_getScrollbarSize","getScrollbarSize","isOverflowing","container","doc","body","innerWidth","documentElement","clientWidth","scrollHeight","clientHeight","ariaHidden","element","show","setAttribute","removeAttribute","getPaddingRight","parseInt","getComputedStyle","paddingRight","ariaHiddenSiblings","mountElement","currentElement","elementsToExclude","blacklist","blacklistTagNames","forEach","call","children","indexOf","tagName","findIndexOf","items","callback","idx","some","item","index","handleContainer","containerInfo","props","restoreStyle","disableScrollLock","scrollbarSize","push","value","style","property","el","fixedElements","querySelectorAll","parent","parentElement","containerWindow","scrollContainer","nodeName","overflowY","overflow","restore","setProperty","removeProperty","getHiddenSiblings","hiddenSiblings","getAttribute","ModalManager","containers","modals","modal","modalIndex","length","modalRef","mount","containerIndex","splice","nextTop"],"mappings":"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","sourcesContent":["import { unstable_ownerWindow as ownerWindow, unstable_ownerDocument as ownerDocument, unstable_getScrollbarSize as getScrollbarSize } from '@material-ui/utils';\n\n// Is a vertical scrollbar displayed?\nfunction isOverflowing(container) {\n  const doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(element, show) {\n  if (show) {\n    element.setAttribute('aria-hidden', 'true');\n  } else {\n    element.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(element) {\n  return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight, 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountElement, currentElement, elementsToExclude = [], show) {\n  const blacklist = [mountElement, currentElement, ...elementsToExclude];\n  const blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, element => {\n    if (blacklist.indexOf(element) === -1 && blacklistTagNames.indexOf(element.tagName) === -1) {\n      ariaHidden(element, show);\n    }\n  });\n}\n\nfunction findIndexOf(items, callback) {\n  let idx = -1;\n  items.some((item, index) => {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  const restoreStyle = [];\n  const container = containerInfo.container;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      const scrollbarSize = getScrollbarSize(ownerDocument(container));\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        property: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`; // .mui-fixed is a global helper.\n\n      const fixedElements = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedElements, element => {\n        restoreStyle.push({\n          value: element.style.paddingRight,\n          property: 'padding-right',\n          el: element\n        });\n        element.style.paddingRight = `${getPaddingRight(element) + scrollbarSize}px`;\n      });\n    } // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n\n    const parent = container.parentElement;\n    const containerWindow = ownerWindow(container);\n    const scrollContainer = (parent == null ? void 0 : parent.nodeName) === 'HTML' && containerWindow.getComputedStyle(parent).overflowY === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      property: 'overflow',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  const restore = () => {\n    restoreStyle.forEach(({\n      value,\n      el,\n      property\n    }) => {\n      if (value) {\n        el.style.setProperty(property, value);\n      } else {\n        el.style.removeProperty(property);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  const hiddenSiblings = [];\n  [].forEach.call(container.children, element => {\n    if (element.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(element);\n    }\n  });\n  return hiddenSiblings;\n}\n\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\nexport default class ModalManager {\n  constructor() {\n    this.containers = void 0;\n    this.modals = void 0;\n    this.modals = [];\n    this.containers = [];\n  }\n\n  add(modal, container) {\n    let modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex !== -1) {\n      return modalIndex;\n    }\n\n    modalIndex = this.modals.length;\n    this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n    if (modal.modalRef) {\n      ariaHidden(modal.modalRef, false);\n    }\n\n    const hiddenSiblings = getHiddenSiblings(container);\n    ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);\n    const containerIndex = findIndexOf(this.containers, item => item.container === container);\n\n    if (containerIndex !== -1) {\n      this.containers[containerIndex].modals.push(modal);\n      return modalIndex;\n    }\n\n    this.containers.push({\n      modals: [modal],\n      container,\n      restore: null,\n      hiddenSiblings\n    });\n    return modalIndex;\n  }\n\n  mount(modal, props) {\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n\n    if (!containerInfo.restore) {\n      containerInfo.restore = handleContainer(containerInfo, props);\n    }\n  }\n\n  remove(modal) {\n    const modalIndex = this.modals.indexOf(modal);\n\n    if (modalIndex === -1) {\n      return modalIndex;\n    }\n\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n    this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n    if (containerInfo.modals.length === 0) {\n      // The modal might be closed before it had the chance to be mounted in the DOM.\n      if (containerInfo.restore) {\n        containerInfo.restore();\n      }\n\n      if (modal.modalRef) {\n        // In case the modal wasn't in the DOM yet.\n        ariaHidden(modal.modalRef, true);\n      }\n\n      ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);\n      this.containers.splice(containerIndex, 1);\n    } else {\n      // Otherwise make sure the next top modal is visible to a screen reader.\n      const nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n      // aria-hidden because the dom element doesn't exist either\n      // when modal was unmounted before modalRef gets null\n\n      if (nextTop.modalRef) {\n        ariaHidden(nextTop.modalRef, false);\n      }\n    }\n\n    return modalIndex;\n  }\n\n  isTopModal(modal) {\n    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}