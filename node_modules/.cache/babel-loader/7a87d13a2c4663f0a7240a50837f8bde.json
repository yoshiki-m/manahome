{"ast":null,"code":"import responsivePropType from './responsivePropType';\nimport style from './style';\nimport compose from './compose';\nimport { createUnaryUnit, getValue } from './spacing';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return \"\".concat(value, \"px solid\");\n}\n\nexport var border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport var borderRadius = function borderRadius(props) {\n  if (props.borderRadius) {\n    var transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');\n\n    var styleFromPropValue = function styleFromPropValue(propValue) {\n      return {\n        borderRadius: getValue(transformer, propValue)\n      };\n    };\n\n    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);\n  }\n\n  return null;\n};\nborderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {\n  borderRadius: responsivePropType\n} : {};\nborderRadius.filterProps = ['borderRadius'];\nvar borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","map":{"version":3,"sources":["/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/@material-ui/system/esm/borders.js"],"names":["responsivePropType","style","compose","createUnaryUnit","getValue","handleBreakpoints","getBorder","value","border","prop","themeKey","transform","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","props","transformer","theme","styleFromPropValue","propValue","propTypes","process","env","NODE_ENV","filterProps","borders"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,WAA1C;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD;;AAED,mBAAUA,KAAV;AACD;;AAED,OAAO,IAAMC,MAAM,GAAGP,KAAK,CAAC;AAC1BQ,EAAAA,IAAI,EAAE,QADoB;AAE1BC,EAAAA,QAAQ,EAAE,SAFgB;AAG1BC,EAAAA,SAAS,EAAEL;AAHe,CAAD,CAApB;AAKP,OAAO,IAAMM,SAAS,GAAGX,KAAK,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,WADuB;AAE7BC,EAAAA,QAAQ,EAAE,SAFmB;AAG7BC,EAAAA,SAAS,EAAEL;AAHkB,CAAD,CAAvB;AAKP,OAAO,IAAMO,WAAW,GAAGZ,KAAK,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,aADyB;AAE/BC,EAAAA,QAAQ,EAAE,SAFqB;AAG/BC,EAAAA,SAAS,EAAEL;AAHoB,CAAD,CAAzB;AAKP,OAAO,IAAMQ,YAAY,GAAGb,KAAK,CAAC;AAChCQ,EAAAA,IAAI,EAAE,cAD0B;AAEhCC,EAAAA,QAAQ,EAAE,SAFsB;AAGhCC,EAAAA,SAAS,EAAEL;AAHqB,CAAD,CAA1B;AAKP,OAAO,IAAMS,UAAU,GAAGd,KAAK,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,YADwB;AAE9BC,EAAAA,QAAQ,EAAE,SAFoB;AAG9BC,EAAAA,SAAS,EAAEL;AAHmB,CAAD,CAAxB;AAKP,OAAO,IAAMU,WAAW,GAAGf,KAAK,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,aADyB;AAE/BC,EAAAA,QAAQ,EAAE;AAFqB,CAAD,CAAzB;AAIP,OAAO,IAAMO,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACnC,MAAIA,KAAK,CAACD,YAAV,EAAwB;AACtB,QAAME,WAAW,GAAGhB,eAAe,CAACe,KAAK,CAACE,KAAP,EAAc,oBAAd,EAAoC,CAApC,EAAuC,cAAvC,CAAnC;;AAEA,QAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,SAAS;AAAA,aAAK;AACvCL,QAAAA,YAAY,EAAEb,QAAQ,CAACe,WAAD,EAAcG,SAAd;AADiB,OAAL;AAAA,KAApC;;AAIA,WAAOjB,iBAAiB,CAACa,KAAD,EAAQA,KAAK,CAACD,YAAd,EAA4BI,kBAA5B,CAAxB;AACD;;AAED,SAAO,IAAP;AACD,CAZM;AAaPJ,YAAY,CAACM,SAAb,GAAyBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/DT,EAAAA,YAAY,EAAEjB;AADiD,CAAxC,GAErB,EAFJ;AAGAiB,YAAY,CAACU,WAAb,GAA2B,CAAC,cAAD,CAA3B;AACA,IAAMC,OAAO,GAAG1B,OAAO,CAACM,MAAD,EAASI,SAAT,EAAoBC,WAApB,EAAiCC,YAAjC,EAA+CC,UAA/C,EAA2DC,WAA3D,EAAwEC,YAAxE,CAAvB;AACA,eAAeW,OAAf","sourcesContent":["import responsivePropType from './responsivePropType';\nimport style from './style';\nimport compose from './compose';\nimport { createUnaryUnit, getValue } from './spacing';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return `${value}px solid`;\n}\n\nexport const border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport const borderRadius = props => {\n  if (props.borderRadius) {\n    const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');\n\n    const styleFromPropValue = propValue => ({\n      borderRadius: getValue(transformer, propValue)\n    });\n\n    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);\n  }\n\n  return null;\n};\nborderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {\n  borderRadius: responsivePropType\n} : {};\nborderRadius.filterProps = ['borderRadius'];\nconst borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;"]},"metadata":{},"sourceType":"module"}