{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"arrow\", \"children\", \"classes\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableInteractive\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/useId';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport tooltipClasses, { getTooltipUtilityClass } from './tooltipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableInteractive,\n    arrow,\n    touch,\n    placement\n  } = styleProps;\n  const slots = {\n    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],\n    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', `tooltipPlacement${capitalize(placement.split('-')[0])}`],\n    arrow: ['arrow']\n  };\n  return composeClasses(slots, getTooltipUtilityClass, classes);\n};\n\nconst TooltipPopper = styled(Popper, {\n  name: 'MuiTooltip',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.popper, !styleProps.disableInteractive && styles.popperInteractive, styleProps.arrow && styles.popperArrow, !styleProps.open && styles.popperClose);\n  }\n})(({\n  theme,\n  styleProps,\n  open\n}) => _extends({\n  /* Styles applied to the Popper element. */\n  zIndex: theme.zIndex.tooltip,\n  pointerEvents: 'none'\n}, !styleProps.disableInteractive && {\n  pointerEvents: 'auto'\n}, !open && {\n  pointerEvents: 'none'\n}, styleProps.arrow && {\n  [`&[data-popper-placement*=\"bottom\"] .${tooltipClasses.arrow}`]: {\n    top: 0,\n    left: 0,\n    marginTop: '-0.71em',\n    '&::before': {\n      transformOrigin: '0 100%'\n    }\n  },\n  [`&[data-popper-placement*=\"top\"] .${tooltipClasses.arrow}`]: {\n    bottom: 0,\n    left: 0,\n    marginBottom: '-0.71em',\n    '&::before': {\n      transformOrigin: '100% 0'\n    }\n  },\n  [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: {\n    left: 0,\n    marginLeft: '-0.71em',\n    height: '1em',\n    width: '0.71em',\n    '&::before': {\n      transformOrigin: '100% 100%'\n    }\n  },\n  [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: {\n    right: 0,\n    marginRight: '-0.71em',\n    height: '1em',\n    width: '0.71em',\n    '&::before': {\n      transformOrigin: '0 0'\n    }\n  }\n}));\nconst TooltipTooltip = styled('div', {\n  name: 'MuiTooltip',\n  slot: 'Tooltip',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.tooltip, styleProps.touch && styles.touch, styleProps.arrow && styles.tooltipArrow, styles[`tooltipPlacement${capitalize(styleProps.placement.split('-')[0])}`]);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the tooltip (label wrapper) element. */\n  backgroundColor: alpha(theme.palette.grey[700], 0.92),\n  borderRadius: theme.shape.borderRadius,\n  color: theme.palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  padding: '4px 8px',\n  fontSize: theme.typography.pxToRem(11),\n  maxWidth: 300,\n  margin: 2,\n  wordWrap: 'break-word',\n  fontWeight: theme.typography.fontWeightMedium\n}, styleProps.arrow && {\n  position: 'relative',\n  margin: 0\n}, styleProps.touch && {\n  padding: '8px 16px',\n  fontSize: theme.typography.pxToRem(14),\n  lineHeight: `${round(16 / 14)}em`,\n  fontWeight: theme.typography.fontWeightRegular\n}, {\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: _extends({\n    transformOrigin: 'right center',\n    marginRight: '14px'\n  }, styleProps.touch && {\n    marginRight: '24px'\n  }),\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: _extends({\n    transformOrigin: 'left center',\n    marginLeft: '14px'\n  }, styleProps.touch && {\n    marginLeft: '24px'\n  }),\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"top\"] &`]: _extends({\n    transformOrigin: 'center bottom',\n    marginBottom: '14px'\n  }, styleProps.touch && {\n    marginBottom: '24px'\n  }),\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"bottom\"] &`]: _extends({\n    transformOrigin: 'center top',\n    marginTop: '14px'\n  }, styleProps.touch && {\n    marginTop: '24px'\n  })\n}));\nconst TooltipArrow = styled('span', {\n  name: 'MuiTooltip',\n  slot: 'Arrow',\n  overridesResolver: (props, styles) => styles.arrow\n})(({\n  theme\n}) => ({\n  /* Styles applied to the arrow element. */\n  overflow: 'hidden',\n  position: 'absolute',\n  width: '1em',\n  height: '0.71em'\n  /* = width / sqrt(2) = (length of the hypotenuse) */\n  ,\n  boxSizing: 'border-box',\n  color: alpha(theme.palette.grey[700], 0.9),\n  '&::before': {\n    content: '\"\"',\n    margin: 'auto',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'currentColor',\n    transform: 'rotate(45deg)'\n  }\n}));\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n\n    handler(event);\n  };\n}\n\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTooltip'\n  });\n\n  const {\n    arrow = false,\n    children,\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableInteractive: disableInteractiveProp = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps = {},\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const disableInteractive = disableInteractiveProp || followCursor;\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  const prevUserSelect = React.useRef();\n  const stopTouchInteraction = React.useCallback(() => {\n    if (prevUserSelect.current !== undefined) {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      prevUserSelect.current = undefined;\n    }\n\n    clearTimeout(touchTimer.current);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      stopTouchInteraction();\n    };\n  }, [stopTouchInteraction]);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen && !open) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose && open) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    stopTouchInteraction();\n    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.\n\n    document.body.style.WebkitUserSelect = 'none';\n    touchTimer.current = setTimeout(() => {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        handleClose(nativeEvent);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  }\n\n  const positionRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = React.useRef();\n\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  };\n\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n\n  if (describeChild) {\n    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const popperOptions = React.useMemo(() => {\n    var _PopperProps$popperOp;\n\n    let tooltipModifiers = [{\n      name: 'arrow',\n      enabled: Boolean(arrowRef),\n      options: {\n        element: arrowRef,\n        padding: 4\n      }\n    }];\n\n    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\n    }\n\n    return _extends({}, PopperProps.popperOptions, {\n      modifiers: tooltipModifiers\n    });\n  }, [arrowRef, PopperProps]);\n\n  const styleProps = _extends({}, props, {\n    arrow,\n    disableInteractive,\n    placement,\n    PopperComponent,\n    touch: ignoreNonTouchEvents.current\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/_jsx(TooltipPopper, _extends({\n      as: PopperComponent,\n      className: classes.popper,\n      placement: placement,\n      anchorEl: followCursor ? {\n        getBoundingClientRect: () => ({\n          top: positionRef.current.y,\n          left: positionRef.current.x,\n          right: positionRef.current.x,\n          bottom: positionRef.current.y,\n          width: 0,\n          height: 0\n        })\n      } : childNode,\n      popperRef: popperRef,\n      open: childNode ? open : false,\n      id: id,\n      transition: true\n    }, interactiveWrapperListeners, PopperProps, {\n      popperOptions: popperOptions,\n      styleProps: styleProps,\n      children: ({\n        TransitionProps: TransitionPropsInner\n      }) => /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        timeout: theme.transitions.duration.shorter\n      }, TransitionPropsInner, TransitionProps, {\n        children: /*#__PURE__*/_jsxs(TooltipTooltip, {\n          className: classes.tooltip,\n          styleProps: styleProps,\n          children: [title, arrow ? /*#__PURE__*/_jsx(TooltipArrow, {\n            className: classes.arrow,\n            ref: setArrowRef,\n            styleProps: styleProps\n          }) : null]\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   * @default false\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set to `true` if the `title` acts as an accessible description.\n   * By default the `title` acts as an accessible label for the child.\n   * @default false\n   */\n  describeChild: PropTypes.bool,\n\n  /**\n   * Do not respond to focus-visible events.\n   * @default false\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   * @default false\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Makes a tooltip not interactive, i.e. it will close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   * @default false\n   */\n  disableInteractive: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   * @default false\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   * @default 100\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   * @default 0\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   * @default 700\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * If `true`, the tooltip follow the cursor over the wrapped element.\n   * @default false\n   */\n  followCursor: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   * @default 0\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   * @default 1500\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   * @default {}\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Tooltip;","map":{"version":3,"sources":["/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/@material-ui/core/Tooltip/Tooltip.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","elementAcceptingRef","unstable_composeClasses","composeClasses","alpha","styled","useTheme","useThemeProps","capitalize","Grow","Popper","useEventCallback","useForkRef","useId","useIsFocusVisible","useControlled","tooltipClasses","getTooltipUtilityClass","jsx","_jsx","jsxs","_jsxs","round","value","Math","useUtilityClasses","styleProps","classes","disableInteractive","arrow","touch","placement","slots","popper","tooltip","split","TooltipPopper","name","slot","overridesResolver","props","styles","popperInteractive","popperArrow","open","popperClose","theme","zIndex","pointerEvents","top","left","marginTop","transformOrigin","bottom","marginBottom","marginLeft","height","width","right","marginRight","TooltipTooltip","tooltipArrow","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","maxWidth","margin","wordWrap","fontWeight","fontWeightMedium","position","lineHeight","fontWeightRegular","TooltipArrow","overflow","boxSizing","content","display","transform","hystersisOpen","hystersisTimer","testReset","clearTimeout","composeEventHandler","handler","eventHandler","event","Tooltip","forwardRef","inProps","ref","children","describeChild","disableFocusListener","disableHoverListener","disableInteractiveProp","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","followCursor","id","idProp","leaveDelay","leaveTouchDelay","onClose","onOpen","openProp","PopperComponent","PopperProps","title","TransitionComponent","TransitionProps","other","childNode","setChildNode","useState","arrowRef","setArrowRef","ignoreNonTouchEvents","useRef","closeTimer","enterTimer","leaveTimer","touchTimer","openState","setOpenState","controlled","default","state","process","env","NODE_ENV","current","isControlled","undefined","useEffect","disabled","tagName","toLowerCase","console","error","join","prevUserSelect","stopTouchInteraction","useCallback","document","body","style","WebkitUserSelect","handleOpen","handleClose","setTimeout","transitions","duration","shortest","handleEnter","type","removeAttribute","handleLeave","isFocusVisibleRef","onBlur","handleBlurVisible","onFocus","handleFocusVisible","focusVisibleRef","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","detectTouchStart","childrenProps","onTouchStart","handleMouseOver","handleMouseLeave","handleTouchStart","handleTouchEnd","onTouchEnd","handleKeyDown","nativeEvent","key","addEventListener","removeEventListener","handleUseRef","handleFocusRef","handleRef","positionRef","x","y","popperRef","handleMouseMove","onMouseMove","clientX","clientY","update","nameOrDescProps","titleIsString","className","getAttribute","interactiveWrapperListeners","onMouseOver","onMouseLeave","popperOptions","useMemo","_PopperProps$popperOp","tooltipModifiers","enabled","Boolean","options","element","modifiers","concat","Fragment","cloneElement","as","anchorEl","getBoundingClientRect","transition","TransitionPropsInner","timeout","shorter","propTypes","bool","isRequired","object","string","number","func","oneOf","elementType","sx","node"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"arrow\", \"children\", \"classes\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableInteractive\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/useId';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport tooltipClasses, { getTooltipUtilityClass } from './tooltipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableInteractive,\n    arrow,\n    touch,\n    placement\n  } = styleProps;\n  const slots = {\n    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],\n    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', `tooltipPlacement${capitalize(placement.split('-')[0])}`],\n    arrow: ['arrow']\n  };\n  return composeClasses(slots, getTooltipUtilityClass, classes);\n};\n\nconst TooltipPopper = styled(Popper, {\n  name: 'MuiTooltip',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.popper, !styleProps.disableInteractive && styles.popperInteractive, styleProps.arrow && styles.popperArrow, !styleProps.open && styles.popperClose);\n  }\n})(({\n  theme,\n  styleProps,\n  open\n}) => _extends({\n  /* Styles applied to the Popper element. */\n  zIndex: theme.zIndex.tooltip,\n  pointerEvents: 'none'\n}, !styleProps.disableInteractive && {\n  pointerEvents: 'auto'\n}, !open && {\n  pointerEvents: 'none'\n}, styleProps.arrow && {\n  [`&[data-popper-placement*=\"bottom\"] .${tooltipClasses.arrow}`]: {\n    top: 0,\n    left: 0,\n    marginTop: '-0.71em',\n    '&::before': {\n      transformOrigin: '0 100%'\n    }\n  },\n  [`&[data-popper-placement*=\"top\"] .${tooltipClasses.arrow}`]: {\n    bottom: 0,\n    left: 0,\n    marginBottom: '-0.71em',\n    '&::before': {\n      transformOrigin: '100% 0'\n    }\n  },\n  [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: {\n    left: 0,\n    marginLeft: '-0.71em',\n    height: '1em',\n    width: '0.71em',\n    '&::before': {\n      transformOrigin: '100% 100%'\n    }\n  },\n  [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: {\n    right: 0,\n    marginRight: '-0.71em',\n    height: '1em',\n    width: '0.71em',\n    '&::before': {\n      transformOrigin: '0 0'\n    }\n  }\n}));\nconst TooltipTooltip = styled('div', {\n  name: 'MuiTooltip',\n  slot: 'Tooltip',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.tooltip, styleProps.touch && styles.touch, styleProps.arrow && styles.tooltipArrow, styles[`tooltipPlacement${capitalize(styleProps.placement.split('-')[0])}`]);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the tooltip (label wrapper) element. */\n  backgroundColor: alpha(theme.palette.grey[700], 0.92),\n  borderRadius: theme.shape.borderRadius,\n  color: theme.palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  padding: '4px 8px',\n  fontSize: theme.typography.pxToRem(11),\n  maxWidth: 300,\n  margin: 2,\n  wordWrap: 'break-word',\n  fontWeight: theme.typography.fontWeightMedium\n}, styleProps.arrow && {\n  position: 'relative',\n  margin: 0\n}, styleProps.touch && {\n  padding: '8px 16px',\n  fontSize: theme.typography.pxToRem(14),\n  lineHeight: `${round(16 / 14)}em`,\n  fontWeight: theme.typography.fontWeightRegular\n}, {\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: _extends({\n    transformOrigin: 'right center',\n    marginRight: '14px'\n  }, styleProps.touch && {\n    marginRight: '24px'\n  }),\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: _extends({\n    transformOrigin: 'left center',\n    marginLeft: '14px'\n  }, styleProps.touch && {\n    marginLeft: '24px'\n  }),\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"top\"] &`]: _extends({\n    transformOrigin: 'center bottom',\n    marginBottom: '14px'\n  }, styleProps.touch && {\n    marginBottom: '24px'\n  }),\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"bottom\"] &`]: _extends({\n    transformOrigin: 'center top',\n    marginTop: '14px'\n  }, styleProps.touch && {\n    marginTop: '24px'\n  })\n}));\nconst TooltipArrow = styled('span', {\n  name: 'MuiTooltip',\n  slot: 'Arrow',\n  overridesResolver: (props, styles) => styles.arrow\n})(({\n  theme\n}) => ({\n  /* Styles applied to the arrow element. */\n  overflow: 'hidden',\n  position: 'absolute',\n  width: '1em',\n  height: '0.71em'\n  /* = width / sqrt(2) = (length of the hypotenuse) */\n  ,\n  boxSizing: 'border-box',\n  color: alpha(theme.palette.grey[700], 0.9),\n  '&::before': {\n    content: '\"\"',\n    margin: 'auto',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'currentColor',\n    transform: 'rotate(45deg)'\n  }\n}));\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n\n    handler(event);\n  };\n}\n\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTooltip'\n  });\n\n  const {\n    arrow = false,\n    children,\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableInteractive: disableInteractiveProp = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps = {},\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const disableInteractive = disableInteractiveProp || followCursor;\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  const prevUserSelect = React.useRef();\n  const stopTouchInteraction = React.useCallback(() => {\n    if (prevUserSelect.current !== undefined) {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      prevUserSelect.current = undefined;\n    }\n\n    clearTimeout(touchTimer.current);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      stopTouchInteraction();\n    };\n  }, [stopTouchInteraction]);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen && !open) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose && open) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    stopTouchInteraction();\n    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.\n\n    document.body.style.WebkitUserSelect = 'none';\n    touchTimer.current = setTimeout(() => {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        handleClose(nativeEvent);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  }\n\n  const positionRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = React.useRef();\n\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  };\n\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n\n  if (describeChild) {\n    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const popperOptions = React.useMemo(() => {\n    var _PopperProps$popperOp;\n\n    let tooltipModifiers = [{\n      name: 'arrow',\n      enabled: Boolean(arrowRef),\n      options: {\n        element: arrowRef,\n        padding: 4\n      }\n    }];\n\n    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\n    }\n\n    return _extends({}, PopperProps.popperOptions, {\n      modifiers: tooltipModifiers\n    });\n  }, [arrowRef, PopperProps]);\n\n  const styleProps = _extends({}, props, {\n    arrow,\n    disableInteractive,\n    placement,\n    PopperComponent,\n    touch: ignoreNonTouchEvents.current\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/_jsx(TooltipPopper, _extends({\n      as: PopperComponent,\n      className: classes.popper,\n      placement: placement,\n      anchorEl: followCursor ? {\n        getBoundingClientRect: () => ({\n          top: positionRef.current.y,\n          left: positionRef.current.x,\n          right: positionRef.current.x,\n          bottom: positionRef.current.y,\n          width: 0,\n          height: 0\n        })\n      } : childNode,\n      popperRef: popperRef,\n      open: childNode ? open : false,\n      id: id,\n      transition: true\n    }, interactiveWrapperListeners, PopperProps, {\n      popperOptions: popperOptions,\n      styleProps: styleProps,\n      children: ({\n        TransitionProps: TransitionPropsInner\n      }) => /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        timeout: theme.transitions.duration.shorter\n      }, TransitionPropsInner, TransitionProps, {\n        children: /*#__PURE__*/_jsxs(TooltipTooltip, {\n          className: classes.tooltip,\n          styleProps: styleProps,\n          children: [title, arrow ? /*#__PURE__*/_jsx(TooltipArrow, {\n            className: classes.arrow,\n            ref: setArrowRef,\n            styleProps: styleProps\n          }) : null]\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   * @default false\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set to `true` if the `title` acts as an accessible description.\n   * By default the `title` acts as an accessible label for the child.\n   * @default false\n   */\n  describeChild: PropTypes.bool,\n\n  /**\n   * Do not respond to focus-visible events.\n   * @default false\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   * @default false\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Makes a tooltip not interactive, i.e. it will close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   * @default false\n   */\n  disableInteractive: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   * @default false\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   * @default 100\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   * @default 0\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   * @default 700\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * If `true`, the tooltip follow the cursor over the wrapped element.\n   * @default false\n   */\n  followCursor: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   * @default 0\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   * @default 1500\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   * @default {}\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Tooltip;"]},"metadata":{},"sourceType":"module"}