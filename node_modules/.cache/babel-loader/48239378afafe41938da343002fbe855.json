{"ast":null,"code":"import _defineProperty from \"/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nvar _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      disablePortal = styleProps.disablePortal,\n      focused = styleProps.focused,\n      fullWidth = styleProps.fullWidth,\n      hasClearIcon = styleProps.hasClearIcon,\n      hasPopupIcon = styleProps.hasPopupIcon,\n      inputFocused = styleProps.inputFocused,\n      popupOpen = styleProps.popupOpen,\n      size = styleProps.size;\n  var slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', \"tagSize\".concat(capitalize(size))],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nvar AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var _extends2;\n\n    var styleProps = props.styleProps;\n    var fullWidth = styleProps.fullWidth,\n        hasClearIcon = styleProps.hasClearIcon,\n        hasPopupIcon = styleProps.hasPopupIcon,\n        inputFocused = styleProps.inputFocused,\n        size = styleProps.size;\n    return _extends((_extends2 = {}, _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.tag), _extends({}, styles.tag, styles[\"tagSize\".concat(capitalize(size))])), _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.inputRoot), styles.inputRoot), _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.input), _extends({}, styles.input, inputFocused && styles.inputFocused)), _extends2), styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon);\n  }\n})(function (_ref) {\n  var _extends3, _$concat, _MuiOutlinedInput, _MuiFilledInputRo, _extends4;\n\n  var styleProps = _ref.styleProps;\n  return _extends((_extends3 = {}, _defineProperty(_extends3, \"&.\".concat(autocompleteClasses.focused, \" .\").concat(autocompleteClasses.clearIndicator), {\n    visibility: 'visible'\n  }), _defineProperty(_extends3, '@media (pointer: fine)', _defineProperty({}, \"&:hover .\".concat(autocompleteClasses.clearIndicator), {\n    visibility: 'visible'\n  })), _extends3), styleProps.fullWidth && {\n    width: '100%'\n  }, (_extends4 = {}, _defineProperty(_extends4, \"& .\".concat(autocompleteClasses.tag), _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, styleProps.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  })), _defineProperty(_extends4, \"& .\".concat(autocompleteClasses.inputRoot), (_$concat = {\n    flexWrap: 'wrap'\n  }, _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4\n  }), _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4\n  }), _defineProperty(_$concat, \"& .\".concat(autocompleteClasses.input), {\n    width: 0,\n    minWidth: 30\n  }), _$concat)), _defineProperty(_extends4, '& .MuiInput-root', {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  }), _defineProperty(_extends4, '& .MuiInput-root.MuiInputBase-sizeSmall', {\n    '& .MuiInput-input': {\n      padding: '2px 4px 3px 0'\n    }\n  }), _defineProperty(_extends4, '& .MuiOutlinedInput-root', (_MuiOutlinedInput = {\n    padding: 9\n  }, _defineProperty(_MuiOutlinedInput, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4 + 9\n  }), _defineProperty(_MuiOutlinedInput, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4 + 9\n  }), _defineProperty(_MuiOutlinedInput, \"& .\".concat(autocompleteClasses.input), {\n    padding: '7.5px 4px 7.5px 6px'\n  }), _defineProperty(_MuiOutlinedInput, \"& .\".concat(autocompleteClasses.endAdornment), {\n    right: 9\n  }), _MuiOutlinedInput)), _defineProperty(_extends4, '& .MuiOutlinedInput-root.MuiInputBase-sizeSmall', _defineProperty({\n    padding: 6\n  }, \"& .\".concat(autocompleteClasses.input), {\n    padding: '2.5px 4px 2.5px 6px'\n  })), _defineProperty(_extends4, '& .MuiFilledInput-root', (_MuiFilledInputRo = {\n    paddingTop: 19,\n    paddingLeft: 8\n  }, _defineProperty(_MuiFilledInputRo, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4 + 9\n  }), _defineProperty(_MuiFilledInputRo, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4 + 9\n  }), _defineProperty(_MuiFilledInputRo, '& .MuiFilledInput-input', {\n    padding: '7px 4px'\n  }), _defineProperty(_MuiFilledInputRo, \"& .\".concat(autocompleteClasses.endAdornment), {\n    right: 9\n  }), _MuiFilledInputRo)), _defineProperty(_extends4, '& .MuiFilledInput-root.MuiInputBase-sizeSmall', {\n    paddingBottom: 1,\n    '& .MuiFilledInput-input': {\n      padding: '2.5px 4px'\n    }\n  }), _defineProperty(_extends4, \"& .\".concat(autocompleteClasses.input), _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, styleProps.inputFocused && {\n    opacity: 1\n  })), _extends4));\n});\nvar AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.endAdornment;\n  }\n})({\n  /* Styles applied to the endAdornment element. */\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nvar AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.clearIndicator;\n  }\n})({\n  /* Styles applied to the clear indicator. */\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nvar AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: function overridesResolver(_ref2, styles) {\n    var styleProps = _ref2.styleProps;\n    return _extends({}, styles.popupIndicator, styleProps.popupOpen && styles.popupIndicatorOpen);\n  }\n})(function (_ref3) {\n  var styleProps = _ref3.styleProps;\n  return _extends({\n    /* Styles applied to the popup indicator. */\n    padding: 2,\n    marginRight: -2\n  }, styleProps.popupOpen && {\n    transform: 'rotate(180deg)'\n  });\n});\nvar AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: function overridesResolver(props, styles) {\n    var styleProps = props.styleProps;\n    return _extends(_defineProperty({}, \"& .\".concat(autocompleteClasses.option), styles.option), styles.popper, styleProps.disablePortal && styles.popperDisablePortal);\n  }\n})(function (_ref4) {\n  var theme = _ref4.theme,\n      styleProps = _ref4.styleProps;\n  return _extends({\n    /* Styles applied to the popper element. */\n    zIndex: theme.zIndex.modal\n  }, styleProps.disablePortal && {\n    position: 'absolute'\n  });\n});\nvar AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.paper;\n  }\n})(function (_ref5) {\n  var theme = _ref5.theme;\n  return _extends({}, theme.typography.body1, {\n    overflow: 'auto'\n  });\n});\nvar AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.loading;\n  }\n})(function (_ref6) {\n  var theme = _ref6.theme;\n  return {\n    /* Styles applied to the loading wrapper. */\n    color: theme.palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.noOptions;\n  }\n})(function (_ref7) {\n  var theme = _ref7.theme;\n  return {\n    /* Styles applied to the no option wrapper. */\n    color: theme.palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.listbox;\n  }\n})(function (_ref8) {\n  var _ariaSelectedTru, _$concat2;\n\n  var theme = _ref8.theme;\n  return _defineProperty({\n    /* Styles applied to the listbox component. */\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto'\n  }, \"& .\".concat(autocompleteClasses.option), (_$concat2 = {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16\n  }, _defineProperty(_$concat2, theme.breakpoints.up('sm'), {\n    minHeight: 'auto'\n  }), _defineProperty(_$concat2, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }), _defineProperty(_$concat2, '&[aria-disabled=\"true\"]', {\n    opacity: theme.palette.action.disabledOpacity,\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat2, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: theme.palette.action.focus\n  }), _defineProperty(_$concat2, '&[aria-selected=\"true\"]', (_ariaSelectedTru = {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n  }, _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.palette.action.selected\n    }\n  }), _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  }), _ariaSelectedTru)), _$concat2));\n});\nvar AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupLabel;\n  }\n})(function (_ref10) {\n  var theme = _ref10.theme;\n  return {\n    /* Styles applied to the group's label elements. */\n    backgroundColor: theme.palette.background.paper,\n    top: -8\n  };\n});\nvar AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupUl;\n  }\n})(_defineProperty({\n  /* Styles applied to the group's ul elements. */\n  padding: 0\n}, \"& .\".concat(autocompleteClasses.option), {\n  paddingLeft: 24\n}));\nexport { createFilterOptions };\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      className = props.className,\n      _props$clearIcon = props.clearIcon,\n      clearIcon = _props$clearIcon === void 0 ? _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n    fontSize: \"small\"\n  })) : _props$clearIcon,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (option) {\n    var _option$label;\n\n    return (_option$label = option.label) != null ? _option$label : option;\n  } : _props$getOptionLabel,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})) : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var hasClearIcon = !disableClearable && !disabled && dirty;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  var styleProps = _extends({}, props, {\n    disablePortal: disablePortal,\n    focused: focused,\n    fullWidth: fullWidth,\n    hasClearIcon: hasClearIcon,\n    hasPopupIcon: hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen: popupOpen,\n    size: size\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/_jsx(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/_jsxs(\"li\", {\n      children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n        className: classes.groupLabel,\n        styleProps: styleProps,\n        component: \"div\",\n        children: params.group\n      }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n        className: classes.groupUl,\n        styleProps: styleProps,\n        children: params.children\n      })]\n    }, params.key);\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n\n  var defaultRenderOption = function defaultRenderOption(props2, option) {\n    return /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n      children: getOptionLabel(option)\n    }));\n  };\n\n  var renderOption = renderOptionProp || defaultRenderOption;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      styleProps: styleProps\n    }, getRootProps(other), {\n      children: renderInput({\n        id: id,\n        disabled: disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment: startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            styleProps: styleProps,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              className: classes.clearIndicator,\n              styleProps: styleProps,\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              styleProps: styleProps,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled: disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      styleProps: styleProps,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        styleProps: styleProps,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          styleProps: styleProps,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          styleProps: styleProps,\n          role: \"presentation\",\n          onMouseDown: function onMouseDown(event) {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          styleProps: styleProps\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map(function (option, index) {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map(function (option2, index2) {\n                  return renderListOption(option2, option.index + index2);\n                })\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', \"However, \".concat(props.value, \" was provided.\")].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/@material-ui/core/Autocomplete/Autocomplete.js"],"names":["_objectWithoutPropertiesLoose","_extends","_ClearIcon","_ArrowDropDownIcon","_excluded","React","PropTypes","clsx","chainPropTypes","integerPropType","unstable_composeClasses","composeClasses","alpha","Popper","ListSubheader","Paper","IconButton","Chip","ClearIcon","ArrowDropDownIcon","useAutocomplete","createFilterOptions","useThemeProps","styled","autocompleteClasses","getAutocompleteUtilityClass","capitalize","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","styleProps","classes","disablePortal","focused","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","popupOpen","size","slots","root","inputRoot","input","tag","endAdornment","clearIndicator","popupIndicator","popper","paper","listbox","loading","noOptions","option","groupLabel","groupUl","AutocompleteRoot","name","slot","overridesResolver","props","styles","visibility","width","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","right","paddingTop","paddingLeft","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","marginRight","AutocompletePopupIndicator","popupIndicatorOpen","transform","AutocompletePopper","popperDisablePortal","theme","zIndex","modal","AutocompletePaper","typography","body1","overflow","AutocompleteLoading","color","palette","text","secondary","AutocompleteNoOptions","AutocompleteListbox","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","focus","primary","main","selectedOpacity","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","background","AutocompleteGroupUl","Autocomplete","forwardRef","inProps","ref","autoComplete","autoHighlight","autoSelect","blurOnSelect","ChipProps","className","clearIcon","fontSize","clearOnBlur","freeSolo","clearOnEscape","clearText","closeText","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledItemsFocusable","disableListWrap","filterSelectedOptions","forcePopupIcon","getLimitTagsText","more","getOptionLabel","_option$label","label","groupBy","handleHomeEndKeys","includeInputInList","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openOnFocus","openText","PaperComponent","PopperComponent","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","selectOnFocus","other","componentName","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","value","dirty","id","focusedTag","anchorEl","setAnchorEl","inputValue","groupedOptions","startAdornment","length","getCustomizedTagProps","params","map","index","Array","isArray","splice","push","children","defaultRenderGroup","component","group","key","defaultRenderOption","props2","renderListOption","optionProps","Fragment","undefined","InputLabelProps","InputProps","title","inputProps","as","style","clientWidth","role","open","onMouseDown","event","preventDefault","options","option2","index2","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","any","filterOptions","func","getOptionDisabled","isOptionEqualToValue","elementType","onChange","onClose","onHighlightChange","onInputChange","onOpen","array","isRequired","sx","Error","join"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = styleProps;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = styleProps;\n    return _extends({\n      [`& .${autocompleteClasses.tag}`]: _extends({}, styles.tag, styles[`tagSize${capitalize(size)}`]),\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot,\n      [`& .${autocompleteClasses.input}`]: _extends({}, styles.input, inputFocused && styles.inputFocused)\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, styleProps.fullWidth && {\n  width: '100%'\n}, {\n  /* Styles applied to the tag elements, e.g. the chips. */\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, styleProps.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n\n  /* Styles applied to the Input element. */\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  '& .MuiInput-root': {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  '& .MuiInput-root.MuiInputBase-sizeSmall': {\n    '& .MuiInput-input': {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  '& .MuiOutlinedInput-root': {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiOutlinedInput-root.MuiInputBase-sizeSmall': {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  '& .MuiFilledInput-root': {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    '& .MuiFilledInput-input': {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiFilledInput-root.MuiInputBase-sizeSmall': {\n    paddingBottom: 1,\n    '& .MuiFilledInput-input': {\n      padding: '2.5px 4px'\n    }\n  },\n\n  /* Styles applied to the input element. */\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, styleProps.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  /* Styles applied to the endAdornment element. */\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  /* Styles applied to the clear indicator. */\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    styleProps\n  }, styles) => _extends({}, styles.popupIndicator, styleProps.popupOpen && styles.popupIndicatorOpen)\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the popup indicator. */\n  padding: 2,\n  marginRight: -2\n}, styleProps.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, styleProps.disablePortal && styles.popperDisablePortal);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the popper element. */\n  zIndex: theme.zIndex.modal\n}, styleProps.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  /* Styles applied to the loading wrapper. */\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  /* Styles applied to the no option wrapper. */\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  /* Styles applied to the listbox component. */\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n\n  /* Styles applied to the option elements. */\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  /* Styles applied to the group's label elements. */\n  backgroundColor: theme.palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  /* Styles applied to the group's ul elements. */\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  const styleProps = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      styleProps: styleProps,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      styleProps: styleProps,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      styleProps: styleProps\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            styleProps: styleProps,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              className: classes.clearIndicator,\n              styleProps: styleProps,\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              styleProps: styleProps,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      styleProps: styleProps,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        styleProps: styleProps,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          styleProps: styleProps,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          styleProps: styleProps,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          styleProps: styleProps\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}