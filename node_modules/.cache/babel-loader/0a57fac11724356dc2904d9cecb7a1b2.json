{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n} // Duplicated with Stack.js\n\n\nfunction resolveBreakpointValues({\n  values,\n  base\n}) {\n  const keys = Object.keys(base);\n\n  if (keys.length === 0) {\n    return values;\n  }\n\n  let previous;\n  return keys.reduce((acc, breakpoint) => {\n    if (typeof values === 'object') {\n      acc[breakpoint] = values[breakpoint] != null ? values[breakpoint] : values[previous];\n    } else {\n      acc[breakpoint] = values;\n    }\n\n    previous = breakpoint;\n    return acc;\n  }, {});\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  const size = styleProps[breakpoint];\n  if (!size) return;\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: styleProps.columns,\n      base: theme.breakpoints.values\n    }); // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnsBreakpointValues[breakpoint] * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(styleProps.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateDirection({\n  theme,\n  styleProps\n}) {\n  return handleBreakpoints({\n    theme\n  }, styleProps.direction, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n\nexport function generateRowGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    rowSpacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacing, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    columnSpacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacing, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.styleProps;\n    return _extends({}, styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  boxSizing: 'border-box'\n}, styleProps.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, styleProps.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, styleProps.zeroMinWidth && {\n  minWidth: 0\n}, styleProps.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, styleProps.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  styleProps\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp = 12,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columns = React.useContext(GridContext) || columnsProp;\n\n  const styleProps = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","map":{"version":3,"sources":["/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/@material-ui/core/Grid/Grid.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_extendSxProp","extendSxProp","handleBreakpoints","unstable_composeClasses","composeClasses","requirePropFactory","styled","useThemeProps","GridContext","gridClasses","getGridUtilityClass","jsx","_jsx","getOffset","val","parse","parseFloat","String","replace","resolveBreakpointValues","values","base","keys","Object","length","previous","reduce","acc","breakpoint","generateGrid","globalStyles","theme","styleProps","size","styles","flexBasis","flexGrow","maxWidth","columnsBreakpointValues","columns","breakpoints","width","Math","round","more","container","item","columnSpacing","themeSpacing","spacing","fullWidth","assign","up","generateDirection","direction","propValue","output","flexDirection","indexOf","generateRowGap","rowSpacing","marginTop","paddingTop","generateColumnGap","marginLeft","paddingLeft","GridRoot","name","slot","overridesResolver","props","lg","md","sm","wrap","xl","xs","zeroMinWidth","root","boxSizing","display","flexWrap","margin","minWidth","useUtilityClasses","classes","slots","Grid","forwardRef","inProps","ref","themeProps","className","columnsProp","columnSpacingProp","component","rowSpacingProp","other","useContext","wrapChild","element","Provider","value","children","as","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","arrayOf","number","elementType","bool","oneOf","sx","requireProp"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n} // Duplicated with Stack.js\n\n\nfunction resolveBreakpointValues({\n  values,\n  base\n}) {\n  const keys = Object.keys(base);\n\n  if (keys.length === 0) {\n    return values;\n  }\n\n  let previous;\n  return keys.reduce((acc, breakpoint) => {\n    if (typeof values === 'object') {\n      acc[breakpoint] = values[breakpoint] != null ? values[breakpoint] : values[previous];\n    } else {\n      acc[breakpoint] = values;\n    }\n\n    previous = breakpoint;\n    return acc;\n  }, {});\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  const size = styleProps[breakpoint];\n  if (!size) return;\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: styleProps.columns,\n      base: theme.breakpoints.values\n    }); // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnsBreakpointValues[breakpoint] * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(styleProps.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateDirection({\n  theme,\n  styleProps\n}) {\n  return handleBreakpoints({\n    theme\n  }, styleProps.direction, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n\nexport function generateRowGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    rowSpacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacing, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    columnSpacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacing, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.styleProps;\n    return _extends({}, styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  boxSizing: 'border-box'\n}, styleProps.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, styleProps.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, styleProps.zeroMinWidth && {\n  minWidth: 0\n}, styleProps.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, styleProps.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  styleProps\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp = 12,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columns = React.useContext(GridContext) || columnsProp;\n\n  const styleProps = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}