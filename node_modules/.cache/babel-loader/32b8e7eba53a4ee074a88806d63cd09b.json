{"ast":null,"code":"import _slicedToArray from \"/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      checked = styleProps.checked,\n      disabled = styleProps.disabled,\n      edge = styleProps.edge;\n  var slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && \"edge\".concat(capitalize(edge))],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nvar SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(function (_ref) {\n  var styleProps = _ref.styleProps;\n  return _extends({\n    /* Styles applied to the root element. */\n    padding: 9,\n    borderRadius: '50%'\n  }, styleProps.edge === 'start' && {\n    marginLeft: styleProps.size === 'small' ? -3 : -12\n  }, styleProps.edge === 'end' && {\n    marginRight: styleProps.size === 'small' ? -3 : -12\n  });\n});\nvar SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  /* Styles applied to the internal input element. */\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    setCheckedState(event.target.checked);\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  var styleProps = _extends({}, props, {\n    checked: checked,\n    disabled: disabled,\n    disableFocusRipple: disableFocusRipple,\n    edge: edge\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      styleProps: styleProps,\n      tabIndex: tabIndex,\n      type: type,\n      value: value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","map":{"version":3,"sources":["/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/@material-ui/core/internal/SwitchBase.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","capitalize","styled","useControlled","useFormControl","ButtonBase","getSwitchBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","styleProps","classes","checked","disabled","edge","slots","root","input","SwitchBaseRoot","skipSx","padding","borderRadius","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","controlled","default","Boolean","state","setCheckedState","muiFormControl","handleFocus","event","handleBlur","handleInputChange","nativeEvent","defaultPrevented","target","hasLabelFor","component","centerRipple","focusRipple","role","undefined","children","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","oneOf","func","sx","oneOfType","number","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = styleProps;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  padding: 9,\n  borderRadius: '50%'\n}, styleProps.edge === 'start' && {\n  marginLeft: styleProps.size === 'small' ? -3 : -12\n}, styleProps.edge === 'end' && {\n  marginRight: styleProps.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  /* Styles applied to the internal input element. */\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    setCheckedState(event.target.checked);\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const styleProps = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      styleProps: styleProps,\n      tabIndex: tabIndex,\n      type: type,\n      value: value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"]},"metadata":{},"sourceType":"module"}