{"ast":null,"code":"import _defineProperty from \"/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      color = styleProps.color,\n      focused = styleProps.focused,\n      disabled = styleProps.disabled,\n      error = styleProps.error,\n      filled = styleProps.filled,\n      required = styleProps.required;\n  var slots = {\n    root: ['root', \"color\".concat(capitalize(color)), disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\n\nexport var FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(_ref, styles) {\n    var styleProps = _ref.styleProps;\n    return _extends({}, styles.root, styleProps.color === 'secondary' && styles.colorSecondary, styleProps.filled && styles.filled);\n  }\n})(function (_ref2) {\n  var _extends2;\n\n  var theme = _ref2.theme,\n      styleProps = _ref2.styleProps;\n  return _extends({\n    color: theme.palette.text.secondary\n  }, theme.typography.body1, (_extends2 = {\n    lineHeight: '1.4375em',\n    padding: 0\n  }, _defineProperty(_extends2, \"&.\".concat(formLabelClasses.focused), {\n    color: theme.palette[styleProps.color].main\n  }), _defineProperty(_extends2, \"&.\".concat(formLabelClasses.disabled), {\n    color: theme.palette.text.disabled\n  }), _defineProperty(_extends2, \"&.\".concat(formLabelClasses.error), {\n    color: theme.palette.error.main\n  }), _extends2));\n});\nvar AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.asterisk;\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme;\n  return _defineProperty({}, \"&.\".concat(formLabelClasses.error), {\n    color: theme.palette.error.main\n  });\n});\nvar FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n\n  var children = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'label' : _props$component,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n\n  var styleProps = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component: component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      styleProps: styleProps,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormLabel;","map":{"version":3,"sources":["/Users/yoshiki/Documents/Programming/GitHub/manahome/node_modules/@material-ui/core/FormLabel/FormLabel.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","formControlState","useFormControl","capitalize","useThemeProps","styled","formLabelClasses","getFormLabelUtilityClasses","jsxs","_jsxs","useUtilityClasses","styleProps","classes","color","focused","disabled","error","filled","required","slots","root","asterisk","FormLabelRoot","name","slot","overridesResolver","styles","colorSecondary","theme","palette","text","secondary","typography","body1","lineHeight","padding","main","AsteriskComponent","props","FormLabel","forwardRef","inProps","ref","children","className","component","other","muiFormControl","fcs","states","as","process","env","NODE_ENV","propTypes","node","object","string","oneOf","elementType","bool","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\n\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: ({\n    styleProps\n  }, styles) => {\n    return _extends({}, styles.root, styleProps.color === 'secondary' && styles.colorSecondary, styleProps.filled && styles.filled);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.body1, {\n  lineHeight: '1.4375em',\n  padding: 0,\n  [`&.${formLabelClasses.focused}`]: {\n    color: theme.palette[styleProps.color].main\n  },\n  [`&.${formLabelClasses.disabled}`]: {\n    color: theme.palette.text.disabled\n  },\n  [`&.${formLabelClasses.error}`]: {\n    color: theme.palette.error.main\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formLabelClasses.error}`]: {\n    color: theme.palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n\n  const {\n    children,\n    className,\n    component = 'label'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n\n  const styleProps = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      styleProps: styleProps,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormLabel;"]},"metadata":{},"sourceType":"module"}